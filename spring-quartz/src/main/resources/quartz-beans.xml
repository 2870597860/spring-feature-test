<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" >

	<context:component-scan base-package="com.wuhulala.quartz"/>
	<context:property-placeholder location="classpath:server.properties"/>
	<bean id="timerDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${org.quartz.dataSource.myDS.driver}"></property>
		<property name="username" value="${org.quartz.dataSource.myDS.user}"></property>
		<property name="password" value="${org.quartz.dataSource.myDS.password}"></property>
		<property name="url" value="${org.quartz.dataSource.myDS.URL}"></property>
		<property name="maxActive" value="10"></property>
		<property name="maxIdle" value="10"></property>
		<property name="minIdle" value="10"></property>
		<property name="maxWait" value="10000"></property>
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
	</bean>
	 
	<bean id="myClusteredScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="autoStartup" value="${quartz.onoff}"/>
		<property name="dataSource">
			<ref bean="timerDataSource"/>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
		<!--applicationContextSchedulerContextKey： 是org.springframework.scheduling.quartz.SchedulerFactoryBean这个类中把spring上下 文以key/value的方式存放在了quartz的上下文中了，可以用applicationContextSchedulerContextKey所定义的key得到对应的spring上下文-->
		
		<!--配置静态任务
			<property name="triggers">
				<list>
					<ref bean="cronTrigger"/>
					 <ref bean="simpleTrigger"/> 
				</list>
			</property>
		-->
		<property name="configLocation" value="classpath:quartz.properties"/>
		<!--configLocation：用于指明quartz的配置文件的位置 -->
	</bean>
	 
	 <!-- 配置静态任务的
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="exampleJob"/>
		<property name="cronExpression" value="*/10 * * * * ?"/>
	</bean>
	 
	<bean name="exampleJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="examples.ExampleJob"/>
		<property name="durability" value="true" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="timeout" value="5"/>
			</map>
		</property>
	</bean>
	-->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="timerDataSource"/>
	</bean>
</beans>